{"version":3,"sources":["components/formEdit.jsx","App.js","serviceWorker.js","index.js"],"names":["apiurl","func","window","location","origin","FormEditComponent","props","loadFiles","url","fetch","then","rsp","json","data","setState","filelist","catch","error","console","openFile","fileid","pages","i","push","handleNext","openPage","page","state","jsp","form3data","forEach","o","key","value","pageindex","f3","v","s3","getStepContent","stepIndex","List","component","map","file","ListItem","button","onClick","event","ListItemIcon","fontSize","color","ListItemText","primary","secondary","handleBack","className","FormGroup","title","item","FormControlLabel","control","TextField","margin","label","onChange","e","target","type","defaultValue","Checkbox","checked","RadioGroup","Radio","Button","variant","method","headers","body","JSON","stringify","log","open","activeStep","steps","this","Stepper","alternativeLabel","Step","StepLabel","length","handleReset","Paper","React","Component","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mdAwBMA,EAAO,SAACC,GACV,MAAM,GAAN,OAAUC,OAAOC,SAASC,OAA1B,gBAAwCH,IAEvBI,E,YACjB,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KAaVC,UAAY,WACR,IAAIC,EAAMR,EAAO,QACjBS,MAAMD,GACLE,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAI,OAAE,EAAKC,SAAS,CAACC,SAASF,OACnCG,OAAM,SAAAC,GAAK,OAAEC,QAAQD,MAAM,yBAAyBT,EAAIS,OAnB3C,EAsBlBE,SAAS,SAACC,GACM,SAATA,GAEHX,MAAMT,EAAO,QAAD,OAASoB,KACpBV,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAEF,IADA,IAAIQ,EAAQ,GACJC,EAAE,EAAEA,EAAET,EAAKS,IACfD,EAAME,KAAKD,EAAE,GACjB,EAAKR,SAAS,CAACM,OAAOA,EAAOC,MAAMA,IAAO,WACtC,EAAKG,mBAGZR,OAAM,SAAAC,GAAK,OAAEC,QAAQD,MAAM,mBAAmBA,OAnCjC,EAsClBQ,SAAS,SAACC,GACI,IAAPA,GAEHjB,MAAMT,EAAO,QAAD,OAAS,EAAK2B,MAAMP,OAApB,YAA8BM,KACzChB,MAAK,SAAAkB,GAAG,OAAEA,EAAIhB,UACdF,MAAK,SAAAG,GACF,IAAIgB,EAAY,GAChBhB,EAAKiB,SAAQ,SAAAC,GACTF,EAAUE,EAAEC,KAAOD,EAAEE,SAEzB,EAAKnB,SAAS,CAACe,UAAUA,EAAUK,UAAUR,IAAM,WAC/C,EAAKF,mBAGZR,OAAM,SAAAC,GAAK,OAAEC,QAAQD,MAAM,mBAAoBA,OApDlC,EAuDlBkB,GAAI,SAACH,GACD,IAAII,EAAI,EAAKT,MAAME,UAAUG,GAC7B,OAAW,OAAJI,EAAS,GAAGA,GAzDL,EA2DlBC,GAAK,SAACL,EAAIC,GAAS,IACRJ,EAAa,EAAKF,MAAlBE,UACPA,EAAUG,GAAOC,EACjB,EAAKnB,SAAS,CAACe,eA9DD,EAiEnBS,eAAiB,SAACC,GACjB,OAAQA,GACN,KAAK,EACH,OACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,OACf,EAAKd,MAAMZ,SAAS2B,KAAI,SAAAC,GAAI,OACzB,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACb,IAAG,eAAUW,GAAQG,QAAS,SAAAC,GAAK,OAAI,EAAK5B,SAASwB,KACtE,kBAACK,EAAA,EAAD,KACI,kBAAC,IAAD,CAAaC,SAAS,QAAQC,MAAc,SAAPP,EAAc,UAAU,eAEjE,kBAACQ,EAAA,EAAD,CACIC,QAAO,eAAUT,GACjBU,UAAkB,SAAPV,GAAiB,uBAKxC,KAAK,EACH,OACE,kBAACH,EAAA,EAAD,CAAOC,UAAU,OACb,kBAACG,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,EAAKQ,YAC3B,kBAACN,EAAA,EAAD,KACE,kBAAC,IAAD,CAAeC,SAAS,QAAQC,MAAM,aAExC,kBAACC,EAAA,EAAD,CACEC,QAAQ,uBAGjB,EAAKzB,MAAMN,MAAMqB,KAAI,SAAAhB,GAAI,OACtB,kBAACkB,EAAA,EAAD,CAAUC,QAAM,EAACb,IAAG,eAAUN,GAAQoB,QAAS,SAAAC,GAAK,OAAE,EAAKtB,SAASC,KACpE,kBAACsB,EAAA,EAAD,KACI,kBAAC,IAAD,CAA8BC,SAAS,QAAQC,MAAc,IAAPxB,EAAS,UAAU,eAE7E,kBAACyB,EAAA,EAAD,CACIC,QAAO,eAAU1B,GACjB2B,UAAkB,IAAP3B,GAAY,uBAKnC,KAAK,EACH,OACI,6BACI,kBAACc,EAAA,EAAD,CAAOC,UAAU,OACb,kBAACG,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,EAAKQ,YAC3B,kBAACN,EAAA,EAAD,KACI,kBAAC,IAAD,CAAeC,SAAS,QAAQC,MAAM,aAE1C,kBAACC,EAAA,EAAD,CACIC,QAAQ,wBAIpB,yBAAKG,UAAU,eAAf,oBAEI,kBAACC,EAAA,EAAD,CAAWD,UAAU,cAErB,CACI,CAACvB,IAAI,cAAcyB,MAAM,eACzB,CAACzB,IAAI,cAAcyB,MAAM,gBAC3Bf,KAAI,SAAAgB,GAAI,OACN,kBAACC,EAAA,EAAD,CAAkB3B,IAAK0B,EAAK1B,IAC5B4B,QAAS,kBAACC,EAAA,EAAD,CAAWN,UAAU,YAAYO,OAAO,SAC7CC,MAAOL,EAAKD,MACZxB,MAAO,EAAKE,GAAGuB,EAAK1B,KACpBgC,SAAU,SAAAC,GAAC,OAAE,EAAK5B,GAAGqB,EAAK1B,IAAIiC,EAAEC,OAAOjC,iBAMnD,yBAAKsB,UAAU,eAAf,mBAEI,kBAACC,EAAA,EAAD,CAAWD,UAAU,cAErB,CACI,CAACvB,IAAI,SAASyB,MAAM,aACtBf,KAAI,SAAAgB,GAAI,OACN,kBAACC,EAAA,EAAD,CAAkB3B,IAAK0B,EAAK1B,IAC5B4B,QAAS,kBAACC,EAAA,EAAD,CAAWN,UAAU,YAAYO,OAAO,SAASK,KAAK,OAC3DJ,MAAOL,EAAKD,MACZW,aAAa,aACbnC,MAAO,EAAKE,GAAGuB,EAAK1B,KACpBgC,SAAU,SAAAC,GAAC,OAAE,EAAK5B,GAAGqB,EAAK1B,IAAIiC,EAAEC,OAAOjC,iBAMnD,yBAAKsB,UAAU,eAAf,oBAEI,kBAACC,EAAA,EAAD,CAAWD,UAAU,cAErB,CACI,CAACvB,IAAI,gBAAgByB,MAAM,aAC3B,CAACzB,IAAI,iBAAiByB,MAAM,YAC9Bf,KAAI,SAAAgB,GAAI,OACN,kBAACC,EAAA,EAAD,CAAkB3B,IAAK0B,EAAK1B,IAC5B4B,QAAS,kBAACC,EAAA,EAAD,CAAWN,UAAU,YAAYO,OAAO,SAC7CC,MAAOL,EAAKD,MACZxB,MAAO,EAAKE,GAAGuB,EAAK1B,KACpBgC,SAAU,SAAAC,GAAC,OAAE,EAAK5B,GAAGqB,EAAK1B,IAAIiC,EAAEC,OAAOjC,iBAMnD,yBAAKsB,UAAU,eAAf,yBAEI,kBAACC,EAAA,EAAD,CAAWD,UAAU,cACpB,CACG,CAACvB,IAAI,iBAAiByB,MAAM,WAC5B,CAACzB,IAAI,iBAAiByB,MAAM,WAC5B,CAACzB,IAAI,iBAAiByB,MAAM,YAC5B,CAACzB,IAAI,iBAAiByB,MAAM,aAC5B,CAACzB,IAAI,iBAAiByB,MAAM,YAC5B,CAACzB,IAAI,iBAAiByB,MAAM,WAC5B,CAACzB,IAAI,qBAAqByB,MAAM,qDAClCf,KAAI,SAAAgB,GAAI,OACN,kBAACC,EAAA,EAAD,CAAkB3B,IAAK0B,EAAK1B,IAC5B4B,QAAS,kBAACS,EAAA,EAAD,CACLC,QAA6B,QAApB,EAAKnC,GAAGuB,EAAK1B,KACtBgC,SAAU,SAAAC,GAAC,OAAE,EAAK5B,GAAGqB,EAAK1B,IAAIiC,EAAEC,OAAOI,QAAQ,MAAM,OACrDpB,MAAM,YACVa,MAAOL,EAAKD,aAKpB,yBAAKF,UAAU,eAAf,gCAEI,kBAACC,EAAA,EAAD,CAAWD,UAAU,cAErB,CACI,CAACvB,IAAI,aAAayB,MAAM,mBACxB,CAACzB,IAAI,gBAAgByB,MAAM,wBAC7Bf,KAAI,SAAAgB,GAAI,OACN,kBAACC,EAAA,EAAD,CAAkB3B,IAAK0B,EAAK1B,IAC5B4B,QAAS,kBAACC,EAAA,EAAD,CAAWN,UAAU,YAAYO,OAAO,SAC7CC,MAAOL,EAAKD,MACZxB,MAAO,EAAKE,GAAGuB,EAAK1B,KACpBgC,SAAU,SAAAC,GAAC,OAAE,EAAK5B,GAAGqB,EAAK1B,IAAIiC,EAAEC,OAAOjC,iBAMnD,yBAAKsB,UAAU,eAAf,8HAC+H,6BAC3H,oCAFJ,+LAGI,kBAACC,EAAA,EAAD,CAAWD,UAAU,cAErB,CACI,CAACvB,IAAI,cAAcyB,MAAM,mBACzB,CAACzB,IAAI,iBAAiByB,MAAM,qBAC9Bf,KAAI,SAAAgB,GAAI,OACN,kBAACC,EAAA,EAAD,CAAkB3B,IAAK0B,EAAK1B,IAC5B4B,QAAS,kBAACC,EAAA,EAAD,CAAWN,UAAU,YAAYO,OAAO,SAC7CC,MAAOL,EAAKD,MACZxB,MAAO,EAAKE,GAAGuB,EAAK1B,KACpBgC,SAAU,SAAAC,GAAC,OAAE,EAAK5B,GAAGqB,EAAK1B,IAAIiC,EAAEC,OAAOjC,iBAMnD,yBAAKsB,UAAU,eAAf,yCAEI,kBAACC,EAAA,EAAD,CAAWD,UAAU,cAErB,CACI,CAACvB,IAAI,SAASyB,MAAM,oBACtBf,KAAI,SAAAgB,GAAI,OACN,kBAACC,EAAA,EAAD,CAAkB3B,IAAK0B,EAAK1B,IAC5B4B,QAAS,kBAACC,EAAA,EAAD,CAAWN,UAAU,YAAYO,OAAO,SAC7CC,MAAOL,EAAKD,MACZxB,MAAO,EAAKE,GAAGuB,EAAK1B,KACpBgC,SAAU,SAAAC,GAAC,OAAE,EAAK5B,GAAGqB,EAAK1B,IAAIiC,EAAEC,OAAOjC,iBAMnD,yBAAKsB,UAAU,eAAf,sCACuC,6BACnC,oCAFJ,wEAGI,kBAACC,EAAA,EAAD,CAAWD,UAAU,cAErB,CACI,CAACvB,IAAI,cAAcyB,MAAM,UACzB,CAACzB,IAAI,cAAcyB,MAAM,OACzB,CAACzB,IAAI,gBAAgByB,MAAM,WAC3B,CAACzB,IAAI,aAAayB,MAAM,aAC1Bf,KAAI,SAAAgB,GAAI,OACN,kBAACC,EAAA,EAAD,CAAkB3B,IAAK0B,EAAK1B,IAC5B4B,QAAS,kBAACC,EAAA,EAAD,CAAWN,UAAU,YAAYO,OAAO,SAC7CC,MAAOL,EAAKD,MACZxB,MAAO,EAAKE,GAAGuB,EAAK1B,KACpBgC,SAAU,SAAAC,GAAC,OAAE,EAAK5B,GAAGqB,EAAK1B,IAAIiC,EAAEC,OAAOjC,iBAMnD,yBAAKsB,UAAU,eAAf,gCACiC,6BAC7B,oGACA,kBAACC,EAAA,EAAD,CAAWD,UAAU,cAErB,CACI,CAACvB,IAAI,iBAAiByB,MAAM,UAC5B,CAACzB,IAAI,iBAAiByB,MAAM,OAC5B,CAACzB,IAAI,mBAAmByB,MAAM,WAC9B,CAACzB,IAAI,iBAAiByB,MAAM,aAC9Bf,KAAI,SAAAgB,GAAI,OACN,kBAACC,EAAA,EAAD,CAAkB3B,IAAK0B,EAAK1B,IAC5B4B,QAAS,kBAACC,EAAA,EAAD,CAAWN,UAAU,YAAYO,OAAO,SAC7CC,MAAOL,EAAKD,MACZxB,MAAO,EAAKE,GAAGuB,EAAK1B,KACpBgC,SAAU,SAAAC,GAAC,OAAE,EAAK5B,GAAGqB,EAAK1B,IAAIiC,EAAEC,OAAOjC,iBAMnD,yBAAKsB,UAAU,eAAf,6BAEI,kBAACC,EAAA,EAAD,CAAWD,UAAU,cACjB,4CAGQ,CACI,CAACvB,IAAI,eAAeyB,MAAM,gBAC1B,CAACzB,IAAI,eAAeyB,MAAM,aAC1B,CAACzB,IAAI,YAAYyB,MAAM,WACzBf,KAAI,SAAAgB,GAAI,OACN,kBAACC,EAAA,EAAD,CAAkB3B,IAAK0B,EAAK1B,IAC5B4B,QAAS,kBAACC,EAAA,EAAD,CAAWC,OAAO,SACvBC,MAAOL,EAAKD,MACZxB,MAAO,EAAKE,GAAGuB,EAAK1B,KACpBgC,SAAU,SAAAC,GAAC,OAAE,EAAK5B,GAAGqB,EAAK1B,IAAIiC,EAAEC,OAAOjC,gBAK3D,2CAGQ,CACI,CAACD,IAAI,iBAAiByB,MAAM,gBAC5B,CAACzB,IAAI,iBAAiByB,MAAM,aAC5B,CAACzB,IAAI,cAAcyB,MAAM,WAC3Bf,KAAI,SAAAgB,GAAI,OACN,kBAACC,EAAA,EAAD,CAAkB3B,IAAK0B,EAAK1B,IAC5B4B,QAAS,kBAACC,EAAA,EAAD,CAAWC,OAAO,SACvBC,MAAOL,EAAKD,MACZxB,MAAO,EAAKE,GAAGuB,EAAK1B,KACpBgC,SAAU,SAAAC,GAAC,OAAE,EAAK5B,GAAGqB,EAAK1B,IAAIiC,EAAEC,OAAOjC,kBAO3D,yBAAKsB,UAAU,gBAAf,qGAEI,kBAACC,EAAA,EAAD,CAAWD,UAAU,cAEjB,CACI,CAACvB,IAAI,eAAeyB,MAAM,iBAC5Bf,KAAI,SAAAgB,GAAI,OACV,kBAACa,EAAA,EAAD,CAAYvC,IAAK0B,EAAK1B,IAClBC,MAAgC,QAAzB,EAAKE,GAAGuB,EAAK1B,IAAI,MAAc,MAAM,KAC5CgC,SAAU,SAAAC,GACN,IAAI7B,EAAE6B,EAAEC,OAAOjC,MACf,EAAKI,GAAGqB,EAAK1B,IAAI,MACjB,EAAKK,GAAGqB,EAAK1B,IAAI,KAAS,OAAJI,EAASA,EAAE,MACjC,EAAKC,GAAGqB,EAAK1B,IAAI,KAAS,QAAJI,EAAUA,EAAE,QAEtC,kBAACuB,EAAA,EAAD,CAAkB1B,MAAM,KAAK2B,QAAS,kBAACY,EAAA,EAAD,MAAWT,MAAM,OACvD,kBAACJ,EAAA,EAAD,CAAkB1B,MAAM,MAAM2B,QAAS,kBAACY,EAAA,EAAD,MAAWT,MAAM,2BAKpE,yBAAKR,UAAU,eACX,kBAACC,EAAA,EAAD,CAAWD,UAAU,cACrB,0CAGQ,CACI,CAACvB,IAAI,YAAYyB,MAAM,gBACvB,CAACzB,IAAI,YAAYyB,MAAM,aACvB,CAACzB,IAAI,YAAYyB,MAAM,WACzBf,KAAI,SAAAgB,GAAI,OACN,kBAACC,EAAA,EAAD,CAAkB3B,IAAK0B,EAAK1B,IAC5B4B,QAAS,kBAACC,EAAA,EAAD,CAAWC,OAAO,SACvBC,MAAOL,EAAKD,MACZxB,MAAO,EAAKE,GAAGuB,EAAK1B,KACpBgC,SAAU,SAAAC,GAAC,OAAE,EAAK5B,GAAGqB,EAAK1B,IAAIiC,EAAEC,OAAOjC,gBAKvD,6CAGQ,CACI,CAACD,IAAI,WAAWyB,MAAM,kBACxBf,KAAI,SAAAgB,GAAI,OACN,kBAACC,EAAA,EAAD,CAAkB3B,IAAK0B,EAAK1B,IAC5B4B,QAAS,kBAACC,EAAA,EAAD,CAAWC,OAAO,SACvBC,MAAOL,EAAKD,MACZxB,MAAO,EAAKE,GAAGuB,EAAK1B,KACpBgC,SAAU,SAAAC,GAAC,OAAE,EAAK5B,GAAGqB,EAAK1B,IAAIiC,EAAEC,OAAOjC,kBAO3D,yBAAKsB,UAAU,eAAf,oEACqE,yCACjE,kBAACC,EAAA,EAAD,CAAWD,UAAU,cAEjB,CACI,CAACvB,IAAI,aAAayB,MAAM,oBAC1Bf,KAAI,SAAAgB,GAAI,OACV,kBAACC,EAAA,EAAD,CAAkB3B,IAAK0B,EAAK1B,IAC5B4B,QAAS,kBAACC,EAAA,EAAD,CAAWC,OAAO,SAASP,UAAU,YAC1CQ,MAAOL,EAAKD,MACZxB,MAAO,EAAKE,GAAGuB,EAAK1B,KACpBgC,SAAU,SAAAC,GAAC,OAAE,EAAK5B,GAAGqB,EAAK1B,IAAIiC,EAAEC,OAAOjC,iBAMnD,gCACI,kBAACwC,EAAA,EAAD,CAAQC,QAAQ,YAAYxB,MAAM,UAAUK,UAAU,aAAaT,QAAS,SAAAmB,GACxE,IAAIzD,EAAMR,EAAO,QAAD,OAAS,EAAK2B,MAAMP,OAApB,YAA8B,EAAKO,MAAMO,YACzDzB,MAAMD,EAAI,CACNmE,OAAO,OACPC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,EAAKpD,MAAME,aAEnCnB,MAAK,SAAAkB,GAAG,OAAEA,EAAIhB,UACdF,MAAK,SAAAG,GAAI,OAAEK,QAAQ8D,IAAInE,QAV5B,gBAYA,kBAAC4D,EAAA,EAAD,CAAQC,QAAQ,YAAYxB,MAAM,YAAaK,UAAU,aAAaT,QAAS,SAAAmB,GAC3E,IAAIzD,EAAMR,EAAO,mBAAD,OAAoB,EAAK2B,MAAMP,OAA/B,YAAyC,EAAKO,MAAMO,UAApD,SAChBhC,OAAO+E,KAAKzE,KAFhB,gBAOd,QACE,MAAO,sBAxaO,EA4alBgB,WAAa,WAAO,IACb0D,EAAc,EAAKvD,MAAnBuD,WACP,EAAKpE,SAAS,CAACoE,WAAWA,EAAW,KA9anB,EAibrB5B,WAAa,WAAO,IACV4B,EAAc,EAAKvD,MAAnBuD,WACP,EAAKpE,SAAS,CAACoE,WAAWA,EAAW,KAjbjC,EAAKvD,MAAM,CACPuD,WAAW,EACXnE,SAAS,GACTM,MAAM,GACND,OAAO,GACPc,UAAU,GACVL,UAAU,GACVsD,MAAM,CAAC,cAAe,cAAe,mCAEzC,EAAK5E,YAXS,E,sEAsbX,IAAD,EACqB6E,KAAKzD,MAAzBuD,EADD,EACCA,WAAWC,EADZ,EACYA,MAClB,OACI,yBAAK5B,UAAU,QACb,kBAAC8B,EAAA,EAAD,CAASH,WAAYA,EAAYI,kBAAgB,GAC9CH,EAAMzC,KAAI,SAAAqB,GAAK,OACd,kBAACwB,EAAA,EAAD,CAAMvD,IAAK+B,GACT,kBAACyB,EAAA,EAAD,KAAYzB,QAIlB,6BACGmB,IAAeC,EAAMM,OAClB,kBAAChB,EAAA,EAAD,CAAQ3B,QAASsC,KAAKM,aAAtB,SAEA,kBAACC,EAAA,EAAD,CAAOpC,UAAU,gBAAgB6B,KAAK9C,eAAe4C,U,GAtctBU,IAAMC,WCZtCC,MAVf,WACE,OACE,yBAAKvC,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,SCGYwC,QACW,cAA7B7F,OAAOC,SAAS6F,UAEe,UAA7B9F,OAAOC,SAAS6F,UAEhB9F,OAAOC,SAAS6F,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9F,MAAK,SAAA+F,GACjCA,EAAaC,kB","file":"static/js/main.b9f8e77c.chunk.js","sourcesContent":["import React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nconst apiurl=(func)=>{\n    return `${window.location.origin}/api/${func}`\n}\nexport default class FormEditComponent extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            activeStep:0,\n            filelist:[],\n            pages:[],\n            fileid:'',\n            pageindex:'',\n            form3data:{},\n            steps:['Select File', 'Select Page', 'Edit information or export pdf']\n        }\n        this.loadFiles();\n    }\n\n    loadFiles = () => {\n        var url = apiurl('form');\n        fetch(url)\n        .then(rsp=>rsp.json())\n        .then(data=>this.setState({filelist:data}))\n        .catch(error=>console.error('Fetch file list error:',url,error));\n    }\n\n    openFile=(fileid)=>{\n        if(fileid!=='1022')\n            return;\n        fetch(apiurl(`form/${fileid}`))\n        .then(rsp=>rsp.json())\n        .then(data=>{\n            var pages = [];\n            for(var i=0;i<data;i++)\n                pages.push(i+1);\n            this.setState({fileid:fileid,pages:pages},()=>{\n                this.handleNext();\n            });\n        })\n        .catch(error=>console.error('Open file error:',error));\n    }\n\n    openPage=(page)=>{\n        if(page!==3)\n            return;\n        fetch(apiurl(`form/${this.state.fileid}/${page}`))\n        .then(jsp=>jsp.json())\n        .then(data=>{\n            var form3data = {};\n            data.forEach(o => {\n                form3data[o.key] = o.value;\n            });\n            this.setState({form3data:form3data,pageindex:page},()=>{\n                this.handleNext();\n            });\n        })\n        .catch(error=>console.error('Open page error:', error));\n    }\n\n    f3 =(key)=>{\n        var v = this.state.form3data[key];\n        return v===null?'':v;\n    }\n    s3 = (key,value)=>{\n        const {form3data} = this.state;\n        form3data[key] = value;\n        this.setState({form3data});\n    }\n\n   getStepContent = (stepIndex) => {\n    switch (stepIndex) {\n      case 0:\n        return (\n          <List component=\"nav\">\n          {this.state.filelist.map(file =>(\n              <ListItem button key={`file-${file}`} onClick={event => this.openFile(file)}>\n              <ListItemIcon>\n                  <ListAltIcon fontSize='large' color={file==='1022'?'primary':'secondary'} />\n              </ListItemIcon>\n              <ListItemText\n                  primary={`File ${file}`}\n                  secondary={file==='1022' && 'Click here...'}\n              />\n              </ListItem>\n          ))}\n          </List>);\n      case 1:\n        return (\n          <List  component=\"nav\">\n              <ListItem button onClick={this.handleBack}>\n                  <ListItemIcon>\n                    <ArrowBackIcon fontSize='large' color='primary' />\n                  </ListItemIcon>\n                  <ListItemText \n                    primary='Back to File List'\n                  />\n              </ListItem>\n          {this.state.pages.map(page =>(\n              <ListItem button key={`page-${page}`} onClick={event=>this.openPage(page)}>\n              <ListItemIcon>\n                  <InsertDriveFileOutlinedIcon  fontSize='large' color={page===3?'primary':'secondary'} />\n              </ListItemIcon>\n              <ListItemText\n                  primary={`Page ${page}`}\n                  secondary={page===3 && 'Click here...'}\n              />\n              </ListItem>\n          ))}\n          </List>);\n      case 2:\n        return (\n            <div>\n                <List  component=\"nav\">\n                    <ListItem button onClick={this.handleBack}>\n                        <ListItemIcon>\n                            <ArrowBackIcon fontSize='large' color='primary' />\n                        </ListItemIcon>\n                        <ListItemText \n                            primary='Back to File List'\n                        />\n                    </ListItem>\n                </List>\n                <div className='typography1'>\n                    1. Your Full Name    \n                    <FormGroup className='formgroup1'>\n                    {\n                    [\n                        {key:'ap.name.fam',title:'Family Name'},\n                        {key:'ap.name.giv',title:'Given Names'}\n                    ].map(item=>(\n                        <FormControlLabel key={item.key}\n                        control={<TextField className='textField' margin=\"normal\"\n                            label={item.title}\n                            value={this.f3(item.key)}\n                            onChange={e=>this.s3(item.key,e.target.value)}\n                            />}\n                        />\n                    ))}\n                    </FormGroup>\n                </div>\n                <div className='typography1'>\n                    2. Date of birth\n                    <FormGroup className='formgroup1'>\n                    {\n                    [\n                        {key:'ap.dob',title:'Birthday'}\n                    ].map(item=>(\n                        <FormControlLabel key={item.key}\n                        control={<TextField className='textField' margin=\"normal\" type=\"date\"\n                            label={item.title}\n                            defaultValue=\"2017-05-24\"\n                            value={this.f3(item.key)}\n                            onChange={e=>this.s3(item.key,e.target.value)}\n                            />}\n                        />\n                    ))}\n                    </FormGroup>                    \n                </div>\n                <div className='typography1'>\n                    3. Place of birth\n                    <FormGroup className='formgroup1'>\n                    {\n                    [\n                        {key:'ap.birth.town',title:'Town/city'},\n                        {key:'ap.birth.cntry',title:'Country'}\n                    ].map(item=>(\n                        <FormControlLabel key={item.key}\n                        control={<TextField className='textField' margin=\"normal\"\n                            label={item.title}\n                            value={this.f3(item.key)}\n                            onChange={e=>this.s3(item.key,e.target.value)}\n                            />}\n                        />\n                    ))}\n                    </FormGroup>                  \n                </div>\n                <div className='typography1'>\n                    4. Relationship status\n                    <FormGroup className='formgroup1'>\n                    {[\n                        {key:'ap.marital.mar',title:'Married'},\n                        {key:'ap.marital.eng',title:'Engaged'},\n                        {key:'ap.marital.def',title:'De facto'},\n                        {key:'ap.marital.sep',title:'Separated'},\n                        {key:'ap.marital.div',title:'Divorced'},\n                        {key:'ap.marital.wid',title:'Widowed'},\n                        {key:'ap.marital.nev.mar',title:'Never married or been in a de facto relationship'}\n                    ].map(item=>(\n                        <FormControlLabel key={item.key}\n                        control={<Checkbox \n                            checked={this.f3(item.key)==='Yes'} \n                            onChange={e=>this.s3(item.key,e.target.checked?'Yes':null)} \n                            color='primary' />}\n                        label={item.title}\n                    />\n                    ))}\n                    </FormGroup>\n                </div>\n                <div className='typography1'>\n                    5. Details from your passport\n                    <FormGroup className='formgroup1'>\n                    {\n                    [\n                        {key:'ap.pass.no',title:'Passport number'},\n                        {key:'ap.pass.cntry',title:'Country of passport'}\n                    ].map(item=>(\n                        <FormControlLabel key={item.key}\n                        control={<TextField className='textField' margin=\"normal\"\n                            label={item.title}\n                            value={this.f3(item.key)}\n                            onChange={e=>this.s3(item.key,e.target.value)}\n                            />}\n                        />\n                    ))}\n                    </FormGroup>       \n                </div>\n                <div className='typography1'>\n                    6. Details of identity card or identity number issued to you by your government (if applicable) eg. National identity card.<br />\n                    <b>Note:</b> If you are the holder of multiple identity numbers because you are a citizen of more than one country, you need to enter the identity number on the card from the country that you live in.\n                    <FormGroup className='formgroup1'>\n                    {\n                    [\n                        {key:'ap.ident.no',title:'Identity number'},\n                        {key:'ap.ident.cntry',title:'Country of issue'}\n                    ].map(item=>(\n                        <FormControlLabel key={item.key}\n                        control={<TextField className='textField' margin=\"normal\"\n                            label={item.title}\n                            value={this.f3(item.key)}\n                            onChange={e=>this.s3(item.key,e.target.value)}\n                            />}\n                        />\n                    ))}\n                    </FormGroup>       \n                </div>\n                <div className='typography1'>\n                    7. Your present country of citizenship\n                    <FormGroup className='formgroup1'>\n                    {\n                    [\n                        {key:'ap.cit',title:'Identity number'}\n                    ].map(item=>(\n                        <FormControlLabel key={item.key}\n                        control={<TextField className='textField' margin=\"normal\"\n                            label={item.title}\n                            value={this.f3(item.key)}\n                            onChange={e=>this.s3(item.key,e.target.value)}\n                            />}\n                        />\n                    ))}\n                    </FormGroup>       \n                </div>                \n                <div className='typography1'>\n                    8. Your current residential address<br />\n                    <b>Note:</b> A post office box address is not acceptable as a residential address\n                    <FormGroup className='formgroup1'>\n                    {\n                    [\n                        {key:'ap.resi.str',title:'Street'},\n                        {key:'ap.resi.sub',title:'Sub'},\n                        {key:'ap.resi.cntry',title:'Country'},\n                        {key:'ap.resi.pc',title:'Postcode'}\n                    ].map(item=>(\n                        <FormControlLabel key={item.key}\n                        control={<TextField className='textField' margin=\"normal\"\n                            label={item.title}\n                            value={this.f3(item.key)}\n                            onChange={e=>this.s3(item.key,e.target.value)}\n                            />}\n                        />\n                    ))}\n                    </FormGroup>       \n                </div>\n                <div className='typography1'>\n                    9. Address for correspondence<br />\n                    <i>(If the same as your residential address, write ‘AS ABOVE’)</i>\n                    <FormGroup className='formgroup1'>\n                    {\n                    [\n                        {key:'ap.corresp.str',title:'Street'},\n                        {key:'ap.corresp.sub',title:'Sub'},\n                        {key:'ap.corresp.cntry',title:'Country'},\n                        {key:'ap.corresp.hap',title:'Postcode'}\n                    ].map(item=>(\n                        <FormControlLabel key={item.key}\n                        control={<TextField className='textField' margin=\"normal\"\n                            label={item.title}\n                            value={this.f3(item.key)}\n                            onChange={e=>this.s3(item.key,e.target.value)}\n                            />}\n                        />\n                    ))}\n                    </FormGroup>       \n                </div>\n                <div className='typography1'>\n                    10. Your telephone numbers\n                    <FormGroup className='formgroup1'>\n                        <div>\n                            Office hours\n                            {\n                                [\n                                    {key:'ap.off.ph.cc',title:'Country code'},\n                                    {key:'ap.off.ph.ac',title:'Area code'},\n                                    {key:'ap.off.ph',title:'Number'}\n                                ].map(item=>(\n                                    <FormControlLabel key={item.key}\n                                    control={<TextField margin=\"normal\"\n                                        label={item.title}\n                                        value={this.f3(item.key)}\n                                        onChange={e=>this.s3(item.key,e.target.value)}\n                                        />}\n                                    />\n                            ))}                        \n                        </div>\n                    <div>\n                        After hours\n                        {\n                            [\n                                {key:'ap.after.ph.cc',title:'Country code'},\n                                {key:'ap.after.ph.ac',title:'Area code'},\n                                {key:'ap.after.pn',title:'Number'}\n                            ].map(item=>(\n                                <FormControlLabel key={item.key}\n                                control={<TextField margin=\"normal\"\n                                    label={item.title}\n                                    value={this.f3(item.key)}\n                                    onChange={e=>this.s3(item.key,e.target.value)}\n                                    />}\n                                />\n                        ))}                        \n                    </div>\n                    </FormGroup>       \n                </div>\n                <div className='typography11'>\n                    11. Do you agree to the Department communicating with you by fax, email or other electronic means?\n                    <FormGroup className='formgroup1'>\n                        {\n                        [\n                            {key:'ap.com.dimia',title:'Country code'}\n                        ].map(item=>(\n                        <RadioGroup key={item.key}\n                            value={this.f3(item.key+'.2')==='yes'?'yes':'no'} \n                            onChange={e=>{\n                                var v=e.target.value;\n                                this.s3(item.key,null);\n                                this.s3(item.key+\".1\",v===\"no\"?v:null);\n                                this.s3(item.key+\".2\",v===\"yes\"?v:null);\n                            }}>\n                            <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\n                            <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes, Giv Details\" />\n                        </RadioGroup>\n                        ))}\n                    </FormGroup>       \n                </div>                \n                <div className='typography2'>\n                    <FormGroup className='formgroup1'>\n                    <div>\n                        Fax number\n                        {\n                            [\n                                {key:'ap.fax.cc',title:'Country code'},\n                                {key:'ap.fax.ac',title:'Area code'},\n                                {key:'ap.fax.ph',title:'Number'}\n                            ].map(item=>(\n                                <FormControlLabel key={item.key}\n                                control={<TextField margin=\"normal\"\n                                    label={item.title}\n                                    value={this.f3(item.key)}\n                                    onChange={e=>this.s3(item.key,e.target.value)}\n                                    />}\n                                />\n                        ))}                        \n                    </div>\n                    <div>\n                        Email address\n                        {\n                            [\n                                {key:'ap.email',title:'Email address'}\n                            ].map(item=>(\n                                <FormControlLabel key={item.key}\n                                control={<TextField margin=\"normal\"\n                                    label={item.title}\n                                    value={this.f3(item.key)}\n                                    onChange={e=>this.s3(item.key,e.target.value)}\n                                    />}\n                                />\n                        ))} \n                    </div>                          \n                    </FormGroup>       \n                </div>\n                <div className='typography1'>\n                    12. Client number or file number issued to you by the Department <i>(if known)</i>\n                    <FormGroup className='formgroup1'>\n                    {\n                        [\n                            {key:'ap.file.no',title:'File Management'}\n                        ].map(item=>(\n                        <FormControlLabel key={item.key}\n                        control={<TextField margin=\"normal\" className='textField'\n                            label={item.title}\n                            value={this.f3(item.key)}\n                            onChange={e=>this.s3(item.key,e.target.value)}\n                            />}\n                        />))\n                    }\n                    </FormGroup>       \n                </div>\n                <center>\n                    <Button variant=\"contained\" color='primary' className='backButton' onClick={e=>{\n                        var url = apiurl(`form/${this.state.fileid}/${this.state.pageindex}`);\n                        fetch(url,{\n                            method:'POST',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify(this.state.form3data)\n                        })\n                        .then(jsp=>jsp.json())\n                        .then(data=>console.log(data));\n                    }}>Save My Info</Button>\n                    <Button variant=\"contained\" color='secondary'  className='backButton' onClick={e=>{\n                        var url = apiurl(`download/myform/${this.state.fileid}.${this.state.pageindex}.pdf`);\n                        window.open(url);\n                    }}>Export PDF</Button>\n                </center>\n            </div>\n        );\n      default:\n        return 'Unknown stepIndex';\n    }\n  };\n\n    handleNext = () => {\n    const {activeStep} = this.state;\n    this.setState({activeStep:activeStep+1});\n  };\n\n handleBack = () => {\n    const {activeStep} = this.state;\n    this.setState({activeStep:activeStep-1});\n  };\n\n  render(){\n    const {activeStep,steps} = this.state;\n    return (\n        <div className='root'>\n          <Stepper activeStep={activeStep} alternativeLabel>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <div>\n            {activeStep === steps.length ? (\n                <Button onClick={this.handleReset}>Reset</Button>\n            ) : (\n                <Paper className='instructions'>{this.getStepContent(activeStep)}</Paper>\n            )}\n          </div>\n          \n        </div>\n    )\n  }\n}","import React from 'react';\nimport './App.css';\n\nimport 'typeface-roboto';\nimport FormEditComponent from \"./components/formEdit.jsx\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <FormEditComponent />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}